             1 Как скомпилировать DN2 в пакетном режиме

     Основным  скриптом  пакетной компиляции является файл _dnc.cmd,
но  напрямую  его вызывать не следует: для компиляции под OS/2 и для
OS/2  служит файл _dnco.cmd, аналогично под Win NT (2000, XP) - файл
_dncw.cmd.  Возможна и кросс-компиляция (_dncow.cmd и _dncwo.cmd) но
в  этом  случае будут проблемы с ресурсами (иконками), см. ниже. Для
компиляции под Win 9x следует файлы .cmd переименовать в .bat.

     Для подключения ресурсов (иконок) к dn.exe используются внешние
компиляторы   ресурсов.   Под   OS/2   это  RC.EXE,  под  Win32  это
BRC32.EXE. Если с их вызовом возникают проблемы, можно просто убрать
ссылку  на  ресурсы в dn.pas (прагмат {$R DN.res}). На работу DN это
никак  не  влияет,  просто  DN.EXE  не  будет  содержать стандартной
иконки,  которую  видит  Presentation  Manager в OS/2 или Explorer в
Win32.

     Скрипты  компиляции  можно вызывать либо без параметров (в этом
случае  будет  собрана  неплагинная  версия),  либо  с  параметром P
(плагинная  версия).  Например,  чтобы  собрать  под Win32 плагинную
версию для Win32, следует сделать такой вызов: '_dncw.cmd P'.

     Для  правильного  подключения стандартных модулей VP необходимо
перед  первой  компиляцией  откорректировать  пути  к каталогам VP в
файле  vpc.cfg  (в  первых  четырех  строках). Если VP установлен со
стандартной  структурой  каталогов,  то  достаточно  будет  заменить
только букву диска.

     Скрипт  _dnc.cmd в исходном виде компилирует DN без остановок и
с  минимальным  выводом  на  экран.  Если  желательно более детально
следить  за  процессом  построения,  то  следует  'сделать  наборот'
признак комментария в двух строках в начале скрипта: вместо

      @Echo off
      @rem set pause=pause

сделать

      @rem Echo off
      @set pause=pause


                 2 Как выполнять DN под отладчиком

     2.1 Плагинная версия

     Никак.


     2.2 Неплагинная версия

     Первым  делом,  надо сделать пакетную компиляцию, чтобы создать
генерируемые файлы (version.pas, менюшки, хелпы и т.д.).

     Режимы  IDE  VP задаются в файла VP.VPO (для работы под OS/2) и
VPW.VPO   (для   работы   под  Win32). Соотетственно, IDE вызывается
под   OS/2   просто   так   (VP),   а   под   Win32  -  с  указанием
конфигурационного файла (VP /cVPW.VPO).

     Прежде   всего,  в  файлах  *.VPO  надо  откорректировать  пути
(аналогично  vpc.cfg).  Затем надо вызвать IDE и задать главный файл
(Compile  /  Primary  file)  dn.pas.  Для  Win32  на этом подготовка
закончена.   Под  OS/2  возникают  проблемы  с  pmdnapil.dll.  Из-за
каких-то  мелких  отличий  в  режимах  компиляции  vpc.cfg  и vp.vpo
результирующие  модули  получаются  чуть-чуть  разными  при пакетной
компиляции  и при компиляции из IDE. И этого 'чуть-чуть' хватает для
несовместимости  dn.exe,  скомпилированного  в  IDE, и pmdnapil.dll,
скомпилированного  пакетным  скриптом.  Поэтому  под OS/2 надо после
пакетной  компиляции  однократно сделать в IDE Build pmdnapil.dll, а
уже потом прописать Primary file dn.pas.
     (Если кто-то сумеет вычистить отличия в конфинурациях vpc.cfg и
vp.vpo,  чтобы  под  OS/2 не требовалось это шаманство - не забудьте
поделиться опытом.)

     Затем  следует скомпилировать DN, обязательно в режиме Build, а
не  Make,  иначе  могут  подключиться модули из библиотеки VP вместо
одноименных   модулей  DN  (например,  objects).  В  дальнейшем  при
перекомпиляциях   можно   пользоваться   Make,  если  каталог  EXE.*
не очищался от *.vpi, *.lib.

     Ну  и  еще одна мелочь. Чтобы при работе под виндой в самой IDE
не   портил   нервы   жуткий  клавиатурный  модуль  VP,  есть  смысл
перекомпилить  VP21\BIN.W32\vpkbdw32.dll из vpkbdw32.pas, лежащего в
LIB.W32.
